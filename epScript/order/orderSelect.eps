/* 명령 선택 전반을 담당.

0 일반
1 공격
2 이동
3 기술
4 아이템
5 턴 종료

*/

    import customText as ct;
    import effect as ef;
    import orderText as ot;

    // 명령 팁 선언
    const orderTips = [
        Db("\x13\x04공격할 적을 \x19클릭\x04해주세요!\n\x13\x04우클릭으로 명령을 취소할 수 있습니다\n\n\n\n\n\n\n"),
        Db("\x13\x04이동할 위치를 \x19클릭\x04해주세요!\n\x13\x04우클릭으로 명령을 취소할 수 있습니다\n\n\n\n\n\n\n"),
        Db("\x13\x04사용할 아이템을 \x19클릭\x04해주세요!\n\x13\x04우클릭으로 명령을 취소할 수 있습니다\n\n\n\n\n\n\n"),
        Db("\x13\x04턴을 넘기려면 \x19클릭\x04해주세요!\n\x13\x04우클릭으로 명령을 취소할 수 있습니다\n\n\n\n\n\n\n")
    ];

    // 스타 상수 선언
    const oS = $U("orderSelect");
    const turnTF = $U("turnTF");
    const oSP = $U("orderSelectPosition");
    const mouseLR = $U("mouseLR");
    
    // 이것저것 필요한 것들
    var txtPtr;

    function LocationDistance(loc1 ,loc2) {
        const locTable = EPD(0x58DC60);
        const x1 = dwread_epd(locTable + loc1 * 5) + dwread_epd(locTable + loc1 * 5 + 2);
        const y1 = dwread_epd(locTable + loc1 * 5 + 1) + dwread_epd(locTable + loc1 * 5 + 3);
        const x2 = dwread_epd(locTable + loc2 * 5) + dwread_epd(locTable + loc2 * 5 + 2);
        const y2 = dwread_epd(locTable + loc2 * 5 + 1) + dwread_epd(locTable + loc2 * 5 + 3);
        return sqrt((x1 - x2)*(x1 - x2)+(y1-y2)*(y1-y2)) / 2;
    }

    function orderSelect () {
        ot.orderText();
        const cp = getcurpl();
        if(
                Deaths(CurrentPlayer, Exactly, 1, turnTF) // 턴 보유중이면...
            ){
                for(var orderNum = 0 ; orderNum < 5 ; orderNum++){ // 마우스 좌클릭. 해당 명령으로 넘어가기.
                    if(
                        Deaths(CurrentPlayer, Exactly, orderNum+1, oSP) && 
                        Deaths(CurrentPlayer, Exactly, 1, mouseLR) && 
                        Deaths(CurrentPlayer, Exactly, 0, oS)
                    ){
                        PlayWAV("Evasion.ogg");
                        SetDeaths(CurrentPlayer, SetTo, 0, mouseLR);
                        SetDeaths(CurrentPlayer, SetTo, orderNum+1, oS);
                    }
                }

                // 공격
                if(
                    Deaths(CurrentPlayer, Exactly, 1, oS)
                ){
                    txtPtr = dwread_epd(EPD(0x640B58));
                    ct.print(ct.str(orderTips[0]));
                    SetMemory(0x640B58, SetTo, txtPtr);
                }
                
                // 이동
                if(
                    Deaths(CurrentPlayer, Exactly, 2, oS)
                ){
                    var temp2;
                    var dist;
                    dist = LocationDistance($L("[Player 1] Move") + cp - 1, $L("[Player 1] Mouse") + cp -1);
                    // dist = LocationDistance((41+cp) - 1, (29+cp) - 1); // 마우스와 캐릭터의 거리 구하기

                    if(
                        dist <= 114 // 범위 안이면
                    ){
                        txtPtr = dwread_epd(EPD(0x640B58));
                        ct.print(ct.str(orderTips[1]));
                        SetMemory(0x640B58, SetTo, txtPtr);
                        MoveUnit(1, "Terran Barracks", CurrentPlayer, "Anywhere", (29+cp)); // 배럭은 마우스 위치 표시 용도
                        var temp;
                        temp2 = 0;

                        if(
                            temp == 0 // 배럭 생성하는 용도의 temp
                        ){
                            const mouse = epdread_epd(EPD(0x628438));
                            wwrite(0x665AC0 + 1696 + 249 * 2, 571);
                            CreateUnit(1, "Terran Barracks", "[Wait] 01", CurrentPlayer);
                            SetMemoryEPD(mouse + 0x0DC / 4, SetTo, 8388608);
                            temp = 1;
                        }

                        if(
                            Deaths(CurrentPlayer, Exactly, 1, mouseLR) // 이동 위치 설정
                        ){

                            // 이펙트 및 처리 
                            ct.print("\n\n\n\n\n\n\n\n\n\n");
                            RemoveUnit("Terran Barracks", CurrentPlayer);
                            SetDeaths(CurrentPlayer, SetTo, 0, (192));
                            wwrite(0x665AC0 + 1696 + 383 * 2, 561);
                            CreateUnit(1, $U("orderSignal"), (29+cp), CurrentPlayer);
                            temp = 0;
                            ef.switchSound();

                            // 시스템 부분 처리
                            SetDeaths(AllPlayers, SetTo, cp+1, "Nuclear Missile");
                            SetDeaths(CurrentPlayer, SetTo, 1, "Cargo Ship");
                            SetDeaths(CurrentPlayer, SetTo, 0, turnTF);
                            SetDeaths(CurrentPlayer, SetTo, 2, "playerAct");
                            SetDeaths(CurrentPlayer, SetTo, 0, oSP);
                            SetDeaths(CurrentPlayer, SetTo, 0, oS);
                        }
                    }

                        else{ // 범위 바깥이면
                            txtPtr = dwread_epd(EPD(0x640B58));
                            ct.print("\x13\x04이동 가능한 범위를 벗어났습니다!\n\x13", dist, "");
                            SetMemory(0x640B58, SetTo, txtPtr);
                            if(
                                temp2 == 0
                            ){
                                temp2 = 1;
                                PlayWAV("sound\\protoss\\probe\\pprerr00.wav");
                        }
                    } 
                }

                // 스킬
                if(
                    Deaths(CurrentPlayer, Exactly, 3, oS)
                ){
                    txtPtr = dwread_epd(EPD(0x640B58));
                    // ct.print(ct.str(skillText[playerChar[cp]]));
                    SetMemory(0x640B58, SetTo, txtPtr);
                    /* charSkills */
                    /* charSkills */
                }
                
                // 아이템 사용
                if(
                    Deaths(CurrentPlayer, Exactly, 4, oS)
                ){
                    txtPtr = dwread_epd(EPD(0x640B58));
                    ct.print(ct.str(orderTips[2]));
                    SetMemory(0x640B58, SetTo, txtPtr);
                }
                
                // 턴 넘기기
                if(
                    Deaths(CurrentPlayer, Exactly, 5, oS)
                ){
                    txtPtr = dwread_epd(EPD(0x640B58));
                    ct.print(ct.str(orderTips[3]));
                    SetMemory(0x640B58, SetTo, txtPtr);
                }

                // 명령 취소. 우클릭하면 뭐든지간에 일단 취소함
                if(
                    Deaths(CurrentPlayer, (0), 1, oS) && 
                    Deaths(CurrentPlayer, Exactly, 2, mouseLR)
                ){
                    RemoveUnit("Terran Barracks", CurrentPlayer);
                    RemoveUnit("orderSignal", CurrentPlayer);
                    SetDeaths(CurrentPlayer, SetTo, 0, oS);
                }
            }
        }